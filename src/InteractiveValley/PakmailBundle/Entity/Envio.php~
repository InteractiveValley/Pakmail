<?php

namespace InteractiveValley\PakmailBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Envio
 *
 * @ORM\Table(name="envios")
 * @ORM\Entity(repositoryClass="InteractiveValley\PakmailBundle\Repository\EnvioRepository")
 * @ORM\HasLifecycleCallbacks()
 */
class Envio
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    /**
     * @var DireccionFiscal
     * @todo Direccion fiscal del envio
     *
     * @ORM\ManyToOne(targetEntity="DireccionFiscal",cascade={"persist"})
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="direccion_fiscal_id", referencedColumnName="id")
     * })
     */
    private $direccionFiscal;
    
    /**
     * @var DireccionRemision
     * @todo Direccion del remitente del envio
     *
     * @ORM\ManyToOne(targetEntity="DireccionRemision",cascade={"persist"})
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="direccion_remitente_id", referencedColumnName="id")
     * })
     */
    private $direccionRemitente;
    
    /**
     * @var DireccionDestino
     * @todo Direccion destino del envio
     *
     * @ORM\ManyToOne(targetEntity="DireccionDestino",cascade={"persist"})
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="direccion_destino_id", referencedColumnName="id")
     * })
     */
    private $direccionDestino;
    
    /**
     * @var string
     *
     * @ORM\Column(name="referencia", type="text")
     * @Assert\NotBlank(message="Ingresar la referencia")
     */
    private $referencia;

    /**
     * @var string
     *
     * @ORM\Column(name="tipo", type="string", length=150)
     * @Assert\NotBlank(message="Ingresar el tipo")
     */
    private $tipo;

    /**
     * @var string
     *
     * @ORM\Column(name="precio", type="decimal", scale=2, nullable=true)
     */
    private $precio;

    /**
     * @var string
     *
     * @ORM\Column(name="numGuia", type="string", length=255)
     * @Assert\NotBlank(message="Ingresar numero de guia")
     */
    private $numGuia;

    /**
     * @var string
     *
     * @ORM\Column(name="folio", type="string", length=255, nullable=true)
     */
    private $folio;

    /**
     * @var boolean
     *
     * @ORM\Column(name="asegurarEnvio", type="boolean")
     */
    private $asegurarEnvio;

    /**
     * @var string
     *
     * @ORM\Column(name="montoSeguro", type="decimal", scale=2 ,nullable=true)
     */
    private $montoSeguro;

    /**
     * @var string
     *
     * @ORM\Column(name="importeSeguro", type="decimal", scale=2, nullable=true)
     */
    private $importeSeguro;

    /**
     * @var string
     *
     * @ORM\Column(name="observaciones", type="text", nullable=true)
     */
    private $observaciones;
    

    /**
     * @var integer
     *
     * @ORM\Column(name="perfil", type="integer",nullable=true)
     */
    private $perfil;

    /**
     * @var boolean
     *
     * @ORM\Column(name="hasPerfil", type="boolean")
     */
    private $hasPerfil;

    /**
     * @var integer
     *
     * @ORM\Column(name="status", type="integer")
     */
    private $status;
    
    /**
     * @var Cliente
     * @todo Cliente del envio
     *
     * @ORM\ManyToOne(targetEntity="Cliente", inversedBy="envios")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="cliente_id", referencedColumnName="id")
     * })
     */
    private $cliente;

    /**
     * @var InteractiveValley\BackendBundle\Entity\Usuario
     * @todo Usuario validador del envio
     *
     * @ORM\ManyToOne(targetEntity="InteractiveValley\BackendBundle\Entity\Usuario")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="usuario_id", referencedColumnName="id")
     * })
     */
    private $usuario;
    
    /**
     * @var string
     *
     * @ORM\Column(name="medidas_peso", type="string", length=100)
     * @Assert\NotBlank(message="Ingresar peso en kilogramos")
     */
    private $medidaPeso;
    
    
    /**
     * @var string
     *
     * @ORM\Column(name="medidas_largo", type="string", length=100)
     * @Assert\NotBlank(message="Ingresar el largo")
     */
    private $medidaLargo;
    
    /**
     * @var string
     *
     * @ORM\Column(name="medidas_ancho", type="string", length=100)
     * @Assert\NotBlank(message="Ingresar el ancho")
     */
    private $medidaAncho;
    
    /**
     * @var string
     *
     * @ORM\Column(name="medida_alto", type="string", length=100)
     * @Assert\NotBlank(message="Ingresar el alto")
     */
    private $medidaAlto;
    
    /**
     * @var string
     *
     * @ORM\Column(name="generar_gastos_aduana", type="boolean", nullable=true)
     */
    private $generarGastosAduana;
    
    /**
     * @var string
     *
     * @ORM\Column(name="valor_declarado", type="string", length=255, nullable=true)
     */
    private $valorDeclarado;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="createdAt", type="datetime")
     */
    private $createdAt;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="updatedAt", type="datetime")
     */
    private $updatedAt;
    
    const STATUS_EN_PROCESO =   1;
    const STATUS_ACEPTADA   =   2;
    const STATUS_RECHAZADA  =   3;
    
    public function __construct() {
        $this->hasPerfil = false;
	$this->asegurarEnvio = false;
        $this->generarGastosAduana = false;
    }
    
    /*
     * Timestable
     */
    
    /**
     ** @ORM\PrePersist
     */
    public function setCreatedAtValue()
    {
        if(!$this->getCreatedAt())
        {
          $this->createdAt = new \DateTime();
        }
        if(!$this->getUpdatedAt())
        {
          $this->updatedAt = new \DateTime();
        }
    }

    /**
     * @ORM\PreUpdate
     */
    public function setUpdatedAtValue()
    {
        $this->updatedAt = new \DateTime();
    }
    
    /**
     ** @ORM\PrePersist
     */
    public function setHasPerfilValue()
    {
        if(!$this->getHasPerfil())
        {
          $this->hasPerfil = false;
        }
    }
    
    /**
     ** @ORM\PrePersist
     */
    public function setStatusValue()
    {
        if(!$this->getStatus())
        {
          $this->status = self::STATUS_EN_PROCESO;
        }
    }

    public function getStringStatus(){
        $arreglo=array(
            self::STATUS_EN_PROCESO=>'En proceso',
            self::STATUS_ACEPTADA=>'Aceptada',
            self::STATUS_RECHAZADA=>'Rechazada',
        );
        return $arreglo[$this->getStatus()];
    }
    
    /**
     * @Assert\True(message="Ingresa un monto de seguro valido") 
     */
    public function isMontoSeguroValid(){
        if($this->asegurarEnvio){
            return $this->getMontoSeguro()>0;
        }
        return true;
    }
    
    /**
     * @Assert\True(message="Ingresa un importe de seguro valido") 
     */
    public function isMontoImporteValid(){
        if($this->asegurarEnvio){
            return $this->getImporteSeguro()>0;
        }
        return true;
    }
    
    /**
     * @Assert\True(message="Ingresa un valor declarado valido") 
     */
    public function isValorDeclaradoValid(){
        if($this->generarGastosAduana){
            return $this->getValorDeclarado()>0;
        }
        return true;
    }

}
